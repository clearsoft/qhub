@model QHub.ViewModels.NewResponseViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Respond</h1>
<hr />
<div class="row">
    <form asp-action="Respond">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input name="id" type="hidden" asp-for="Question.Id" />
        @Html.HiddenFor(item => item.Response.Mark)
        @Html.HiddenFor(item => item.Response.Comments)
        <div class="form-group">
            <b>@Html.DisplayNameFor(item => item.Question.QuestionText)</b><br />
            @Html.DisplayFor(item => item.Question.QuestionText)
            <span asp-validation-for="Question.QuestionText" class="text-danger"></span>
        </div>
        @if (Model.Question != null && Model.Question.CloseDate > DateTime.Now)
        {
            <p>
                Enter your response below.
            </p>
            <div class="form-group">
                <b>@Html.DisplayNameFor(item => item.Response.ResponseText)</b><br />
                @Html.TextAreaFor(item => item.Response.ResponseText, new { @cols="100", @rows="10" })
                @Html.ValidationMessageFor(item => item.Response.ResponseText, "You must enter some text", new { @class="text-danger" })
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        }
        else
        {
            <div class="form-group">
                <b><label asp-for="Response.ResponseText" class="control-label"></label></b><br />
                <p class="small">
                    This question has now closed and you will not be able to edit your response, however, a sample response is provided for you to review.<br>
                    Keep an eye on this page for any comments.  Your mark will also be added below if required
                </p>
                @Html.TextAreaFor(item => item.Response.ResponseText, new { @readonly="readonly", @cols="100", @rows="10", @style="background:lightgray" })
                <span asp-validation-for="Response.ResponseText" class="text-danger"></span>
            </div>
            <div class="form-group">
                <b>@Html.DisplayNameFor(item => item.Question.IdealResponse)</b><br />
                @Html.DisplayFor(item => item.Question.IdealResponse)
                <span asp-validation-for="Question.IdealResponse" class="text-danger"></span>
            </div>
            <div class="form-group">
                <b>@Html.DisplayNameFor(item => item.Response.Comments)</b><br />
                @Html.DisplayFor(item => item.Response.Comments)
                <span asp-validation-for="Response.Comments" class="text-danger"></span>
            </div>
            <div class="form-group">
                <b>@Html.DisplayNameFor(item => item.Response.Mark)</b><br />
                @Html.DisplayFor(item => item.Response.Mark)
                <span asp-validation-for="Response.Mark" class="text-danger"></span>
            </div>
        }
    </form>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
